// Achievements
model Achievement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    name        String              @unique
    description String
    icon        String?
    category    AchievementCategory
    requirement Json
    reward      Float               @default(0) // Miner shares reward
    rarity      AchievementRarity   @default(COMMON)
    isActive    Boolean             @default(true)

    // Relations
    userAchievements UserAchievement[]

    @@map("achievements")
}

// User achievements
model UserAchievement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())

    userId        String
    achievementId String
    unlockedAt    DateTime @default(now())
    progress      Json?

    // Relations
    user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    achievement Achievement @relation(fields: [achievementId], references: [id])

    @@unique([userId, achievementId])
    @@map("user_achievements")
}

enum AchievementCategory {
    EXPLORATION
    MINING
    SOCIAL
    PROGRESSION
    SPECIAL
    MASTERY
}

enum AchievementRarity {
    COMMON
    RARE
    EPIC
    LEGENDARY
}
